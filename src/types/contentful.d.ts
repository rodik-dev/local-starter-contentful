// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT MODIFY IT.

import { Asset, Entry } from 'contentful';
import { Document } from '@contentful/rich-text-types';

export interface IBadgeFields {
    /** Label */
    label: string;

    /** Element ID */
    elementId?: string | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IBadge extends Entry<IBadgeFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'Badge';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IButtonFields {
    /** Label */
    label?: string | undefined;

    /** Alt text */
    altText?: string | undefined;

    /** URL */
    url: string;

    /** Show icon */
    showIcon?: boolean | undefined;

    /** Icon */
    icon?:
        | 'apple'
        | 'arrowLeft'
        | 'arrowLeftCircle'
        | 'arrowRight'
        | 'arrowRightCircle'
        | 'cart'
        | 'chevronLeft'
        | 'chevronRight'
        | 'facebook'
        | 'github'
        | 'googlePlay'
        | 'instagram'
        | 'linkedin'
        | 'mail'
        | 'play'
        | 'playCircle'
        | 'reddit'
        | 'send'
        | 'twitter'
        | 'vimeo'
        | 'youtube'
        | undefined;

    /** Icon position */
    iconPosition?: 'left' | 'right' | undefined;

    /** Style */
    style?: 'primary' | 'secondary' | undefined;

    /** Element ID */
    elementId?: string | undefined;
}

export interface IButton extends Entry<IButtonFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'Button';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface ICheckboxFormControlFields {
    /** Name */
    name: string;

    /** Label */
    label?: string | undefined;

    /** Is the field required? */
    isRequired?: boolean | undefined;

    /** Width */
    width?: 'full' | '1/2' | undefined;
}

export interface ICheckboxFormControl extends Entry<ICheckboxFormControlFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'CheckboxFormControl';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IConfigFields {
    /** Favicon */
    favicon?: Asset | undefined;

    /** Header configuration */
    header?: IHeader | undefined;

    /** Footer configuration */
    footer?: IFooter | undefined;

    /** titleSuffix */
    titleSuffix?: string | undefined;

    /** defaultSocialImage */
    defaultSocialImage?: Asset | undefined;

    /** defaultMetaTags */
    defaultMetaTags?: IMetaTag[] | undefined;
}

export interface IConfig extends Entry<IConfigFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'Config';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IContactBlockFields {
    /** Title */
    title?: string | undefined;

    /** Phone number */
    phoneNumber?: string | undefined;

    /** Phone alt text */
    phoneAltText?: string | undefined;

    /** Email address */
    email?: string | undefined;

    /** Email address alt text */
    emailAltText?: string | undefined;

    /** Address */
    address?: string | undefined;

    /** Address alt text */
    addressAltText?: string | undefined;

    /** Element ID */
    elementId?: string | undefined;
}

export interface IContactBlock extends Entry<IContactBlockFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'ContactBlock';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IContactSectionFields {
    /** Element ID */
    elementId?: string | undefined;

    /** Colors */
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f' | 'colors-g' | 'colors-h' | undefined;

    /** Background size */
    backgroundSize?: 'full' | 'inset' | undefined;

    /** Title */
    title?: string | undefined;

    /** Text */
    text?: string | undefined;

    /** Form */
    form?: IFormBlock | undefined;

    /** Media */
    media?: IImageBlock | IVideoBlock | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IContactSection extends Entry<IContactSectionFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'ContactSection';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface ICtaSectionFields {
    /** Element ID */
    elementId?: string | undefined;

    /** Colors */
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f' | 'colors-g' | 'colors-h' | undefined;

    /** Background size */
    backgroundSize?: 'full' | 'inset' | undefined;

    /** Title */
    title?: string | undefined;

    /** Text */
    text?: string | undefined;

    /** Actions */
    actions?: (IButton | ILink)[] | undefined;

    /** Background image */
    backgroundImage?: IImageBlock | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface ICtaSection extends Entry<ICtaSectionFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'CtaSection';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IEmailFormControlFields {
    /** Name */
    name?: string | undefined;

    /** Label */
    label?: string | undefined;

    /** Hide label */
    hideLabel?: boolean | undefined;

    /** Placeholder text */
    placeholder?: string | undefined;

    /** Is the field required? */
    isRequired?: boolean | undefined;

    /** Width */
    width?: 'full' | '1/2' | undefined;
}

export interface IEmailFormControl extends Entry<IEmailFormControlFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'EmailFormControl';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IFaqItemFields {
    /** Question */
    question: string;

    /** Answer */
    answer: string;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IFaqItem extends Entry<IFaqItemFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'FaqItem';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IFaqSectionFields {
    /** Colors */
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f' | 'colors-g' | 'colors-h' | undefined;

    /** Element ID */
    elementId?: string | undefined;

    /** Title */
    title?: string | undefined;

    /** Subtitle */
    subtitle?: string | undefined;

    /** Actions */
    actions?: (IButton | ILink)[] | undefined;

    /** Items */
    items?: IFaqItem[] | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IFaqSection extends Entry<IFaqSectionFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'FaqSection';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IFeaturedItemFields {
    /** Element ID */
    elementId?: string | undefined;

    /** Title */
    title?: string | undefined;

    /** Subtitle */
    subtitle?: string | undefined;

    /** Text */
    text?: string | undefined;

    /** Image */
    featuredImage?: IImageBlock | undefined;

    /** Actions */
    actions?: (IButton | ILink)[] | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IFeaturedItem extends Entry<IFeaturedItemFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'FeaturedItem';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IFeaturedItemsSectionFields {
    /** Colors */
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f' | 'colors-g' | 'colors-h' | undefined;

    /** Element ID */
    elementId?: string | undefined;

    /** Title */
    title?: string | undefined;

    /** Subtitle */
    subtitle?: string | undefined;

    /** Items */
    items?: IFeaturedItem[] | undefined;

    /** Actions */
    actions?: (IButton | ILink)[] | undefined;

    /** Items per row */
    columns?: number | undefined;

    /** Enable hover */
    enableHover?: boolean | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IFeaturedItemsSection extends Entry<IFeaturedItemsSectionFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'FeaturedItemsSection';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IFeaturedPeopleSectionFields {
    /** Element ID */
    elementId?: string | undefined;

    /** Arrangement */
    variant?: 'variant-a' | 'variant-b' | 'variant-c' | undefined;

    /** Colors */
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f' | 'colors-g' | 'colors-h' | undefined;

    /** Title */
    title?: string | undefined;

    /** Subtitle */
    subtitle?: string | undefined;

    /** Actions */
    actions?: (IButton | ILink)[] | undefined;

    /** People */
    people?: IPerson[] | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IFeaturedPeopleSection extends Entry<IFeaturedPeopleSectionFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'FeaturedPeopleSection';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IFeaturedPostsSectionFields {
    /** Element ID */
    elementId?: string | undefined;

    /** Show post date */
    showDate?: boolean | undefined;

    /** Show post author */
    showAuthor?: boolean | undefined;

    /** Show post excerpt */
    showExcerpt?: boolean | undefined;

    /** Arrangement */
    variant?: 'variant-a' | 'variant-b' | 'variant-c' | undefined;

    /** Actions */
    actions?: (IButton | ILink)[] | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;

    /** Title */
    title?: string | undefined;

    /** Subtitle */
    subtitle?: string | undefined;

    /** Colors */
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f' | 'colors-g' | 'colors-h' | undefined;

    /** Posts */
    posts?: IPostLayout[] | undefined;
}

export interface IFeaturedPostsSection extends Entry<IFeaturedPostsSectionFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'FeaturedPostsSection';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IFeatureHighlightSectionFields {
    /** Element ID */
    elementId?: string | undefined;

    /** Colors */
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f' | 'colors-g' | 'colors-h' | undefined;

    /** Background size */
    backgroundSize?: 'full' | 'inset' | undefined;

    /** Title */
    title?: string | undefined;

    /** Subtitle */
    subtitle?: string | undefined;

    /** Badge */
    badge?: IBadge | undefined;

    /** Text */
    text?: string | undefined;

    /** Actions */
    actions?: (IButton | ILink)[] | undefined;

    /** Media */
    media?: IImageBlock | IVideoBlock | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IFeatureHighlightSection extends Entry<IFeatureHighlightSectionFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'FeatureHighlightSection';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IFooterFields {
    /** Colors */
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f' | 'colors-g' | 'colors-h' | undefined;

    /** Logo */
    logo?: IImageBlock | undefined;

    /** Title */
    title?: string | undefined;

    /** Text */
    text?: string | undefined;

    /** Contacts */
    contacts?: IContactBlock | undefined;

    /** Copyright text */
    copyrightText?: string | undefined;

    /** Primary navigation links */
    primaryLinks?: (IButton | ILink)[] | undefined;

    /** Social links */
    socialLinks?: ISocial[] | undefined;

    /** Legal navigation links */
    legalLinks?: (IButton | ILink)[] | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IFooter extends Entry<IFooterFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'Footer';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IFormBlockFields {
    /** Form arrangement */
    variant?: 'variant-a' | 'variant-b' | undefined;

    /** Fields */
    fields?: (ITextFormControl | IEmailFormControl | ITextareaFormControl | ICheckboxFormControl | ISelectFormControl)[] | undefined;

    /** Button */
    submitLabel?: string | undefined;

    /** Element ID */
    elementId: string;

    /** Action (form submission URL) */
    action?: string | undefined;

    /** Destination (email to redirect responses) */
    destination?: string | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IFormBlock extends Entry<IFormBlockFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'FormBlock';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IHeaderFields {
    /** Header arrangement */
    headerVariant?: 'variant-a' | 'variant-b' | 'variant-c' | 'variant-d' | 'variant-e' | undefined;

    /** Primary colors */
    primaryColors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f' | 'colors-g' | 'colors-h' | undefined;

    /** Secondary colors (mobile menu) */
    secondaryColors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f' | 'colors-g' | 'colors-h' | undefined;

    /** Title */
    title?: string | undefined;

    /** Display title */
    isTitleVisible?: boolean | undefined;

    /** Logo */
    logo?: IImageBlock | undefined;

    /** Primary navigation links */
    primaryLinks?: (IButton | ILink)[] | undefined;

    /** Secondary links */
    secondaryLinks?: (IButton | ILink)[] | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IHeader extends Entry<IHeaderFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'Header';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IHeroSectionFields {
    /** Element ID */
    elementId?: string | undefined;

    /** Colors */
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f' | 'colors-g' | 'colors-h' | undefined;

    /** Title */
    title?: string | undefined;

    /** Subtitle */
    subtitle?: string | undefined;

    /** Badge */
    badge?: IBadge | undefined;

    /** Text */
    text?: string | undefined;

    /** Actions */
    actions?: (IButton | ILink)[] | undefined;

    /** Media */
    media?: IFormBlock | IImageBlock | IVideoBlock | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IHeroSection extends Entry<IHeroSectionFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'HeroSection';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IImageBlockFields {
    /** Image */
    url?: Asset | undefined;

    /** Alt text */
    altText?: string | undefined;

    /** Caption */
    caption?: string | undefined;

    /** Element ID */
    elementId?: string | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IImageBlock extends Entry<IImageBlockFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'ImageBlock';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IJobListFields {
    /** Title */
    title?: string | undefined;

    /** Items */
    items?: IJobListItem[] | undefined;
}

export interface IJobList extends Entry<IJobListFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'JobList';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IJobListItemFields {
    /** Title */
    title?: string | undefined;

    /** Location */
    location?: string | undefined;

    /** Text */
    text?: string | undefined;

    /** Actions */
    actions?: (IButton | ILink)[] | undefined;
}

export interface IJobListItem extends Entry<IJobListItemFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'JobListItem';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IJobsSectionFields {
    /** Colors */
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f' | 'colors-g' | 'colors-h' | undefined;

    /** Element ID */
    elementId?: string | undefined;

    /** Title */
    title?: string | undefined;

    /** Subtitle */
    subtitle?: string | undefined;

    /** Job lists */
    jobLists?: IJobList[] | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IJobsSection extends Entry<IJobsSectionFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'JobsSection';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface ILinkFields {
    /** Label */
    label?: string | undefined;

    /** Alt text */
    altText?: string | undefined;

    /** URL */
    url: string;

    /** Show icon */
    showIcon?: boolean | undefined;

    /** Icon */
    icon?:
        | 'apple'
        | 'arrowLeft'
        | 'arrowLeftCircle'
        | 'arrowRight'
        | 'arrowRightCircle'
        | 'cart'
        | 'chevronLeft'
        | 'chevronRight'
        | 'facebook'
        | 'github'
        | 'googlePlay'
        | 'instagram'
        | 'linkedin'
        | 'mail'
        | 'play'
        | 'playCircle'
        | 'reddit'
        | 'send'
        | 'twitter'
        | 'vimeo'
        | 'youtube'
        | undefined;

    /** Icon position */
    iconPosition?: 'left' | 'right' | undefined;

    /** Element ID */
    elementId?: string | undefined;
}

export interface ILink extends Entry<ILinkFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'Link';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IMediaGallerySectionFields {
    /** Colors */
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f' | 'colors-g' | 'colors-h' | undefined;

    /** Element ID */
    elementId?: string | undefined;

    /** Title */
    title?: string | undefined;

    /** Subtitle */
    subtitle?: string | undefined;

    /** Images */
    images?: IImageBlock[] | undefined;

    /** Spacing between images */
    spacing?: number | undefined;

    /** Images per row */
    columns?: number | undefined;

    /** Image aspect ratio */
    aspectRatio?: '1:1' | '3:2' | '2:3' | '4:3' | '3:4' | '16:9' | 'auto' | undefined;

    /** Max image size, in px */
    imageSizePx?: number | undefined;

    /** Show caption */
    showCaption?: boolean | undefined;

    /** Enable hover */
    enableHover?: boolean | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IMediaGallerySection extends Entry<IMediaGallerySectionFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'MediaGallerySection';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IMetaTagFields {
    /** property */
    property?:
        | 'og:title'
        | 'og:type'
        | 'og:image'
        | 'og:image:alt'
        | 'og:url'
        | 'og:description'
        | 'og:locale'
        | 'og:site_name'
        | 'og:video'
        | 'twitter:card'
        | 'twitter:site'
        | 'twitter:creator'
        | 'twitter:description'
        | 'twitter:title'
        | 'twitter:image'
        | 'twitter:image:alt'
        | 'twitter:player'
        | undefined;

    /** content */
    content?: string | undefined;
}

export interface IMetaTag extends Entry<IMetaTagFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'MetaTag';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IPagedPostsSectionFields {
    /** Element ID */
    elementId?: string | undefined;

    /** Show post excerpt */
    showExcerpt?: boolean | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;

    /** Title */
    title?: string | undefined;

    /** Subtitle */
    subtitle?: string | undefined;

    /** Show Date */
    showDate?: boolean | undefined;

    /** Show Author */
    showAuthor?: boolean | undefined;

    /** Variant */
    variant?: 'variant-a' | 'variant-b' | 'variant-c' | undefined;

    /** Actions */
    actions?: (IButton | ILink)[] | undefined;

    /** Colors */
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f' | 'colors-g' | 'colors-h' | undefined;
}

export interface IPagedPostsSection extends Entry<IPagedPostsSectionFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'PagedPostsSection';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IPageLayoutFields {
    /** Title */
    title: string;

    /** Slug */
    slug: string;

    /** Sections */
    sections?:
        | (
              | IContactSection
              | ICtaSection
              | IFaqSection
              | IFeatureHighlightSection
              | IFeaturedItemsSection
              | IFeaturedPeopleSection
              | IFeaturedPostsSection
              | IHeroSection
              | IJobsSection
              | IMediaGallerySection
              | IQuoteSection
              | IRecentPostsSection
              | ITestimonialsSection
              | ITextSection
          )[]
        | undefined;

    /** Seo */
    seo?: ISeo | undefined;
}

export interface IPageLayout extends Entry<IPageLayoutFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'PageLayout';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IPersonFields {
    /** First name */
    firstName: string;

    /** Last name */
    lastName?: string | undefined;

    /** Role */
    role?: string | undefined;

    /** Bio */
    bio?: string | undefined;

    /** Image */
    image?: IImageBlock | undefined;
}

export interface IPerson extends Entry<IPersonFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'Person';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IPostFeedLayoutFields {
    /** Title */
    title?: string | undefined;

    /** Slug */
    slug: string;

    /** Number of Posts per page */
    numOfPostsPerPage?: number | undefined;

    /** Post Feed */
    postFeed?: IPagedPostsSection | undefined;

    /** Top Sections */
    topSections?:
        | (
              | IContactSection
              | ICtaSection
              | IFaqSection
              | IFeatureHighlightSection
              | IFeaturedItemsSection
              | IFeaturedPeopleSection
              | IFeaturedPostsSection
              | IHeroSection
              | IJobsSection
              | IMediaGallerySection
              | IQuoteSection
              | IRecentPostsSection
              | ITestimonialsSection
              | ITextSection
          )[]
        | undefined;

    /** Bottom Sections */
    bottomSections?:
        | (
              | IContactSection
              | ICtaSection
              | IFaqSection
              | IFeatureHighlightSection
              | IFeaturedItemsSection
              | IFeaturedPeopleSection
              | IFeaturedPostsSection
              | IHeroSection
              | IJobsSection
              | IMediaGallerySection
              | IQuoteSection
              | IRecentPostsSection
              | ITestimonialsSection
              | ITextSection
          )[]
        | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IPostFeedLayout extends Entry<IPostFeedLayoutFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'PostFeedLayout';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IPostFeedSectionFields {
    /** Colors */
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f' | 'colors-g' | 'colors-h' | undefined;

    /** Element ID */
    elementId?: string | undefined;

    /** Title */
    title?: string | undefined;

    /** Subtitle */
    subtitle?: string | undefined;

    /** Show post date */
    showDate?: boolean | undefined;

    /** Show post author */
    showAuthor?: boolean | undefined;

    /** Show post excerpt */
    showExcerpt?: boolean | undefined;

    /** Arrangement */
    variant?: 'variant-a' | 'variant-b' | 'variant-c' | undefined;

    /** Actions */
    actions?: (IButton | ILink)[] | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IPostFeedSection extends Entry<IPostFeedSectionFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'PostFeedSection';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IPostLayoutFields {
    /** Title */
    title: string;

    /** Slug */
    slug: string;

    /** Date */
    date: string;

    /** Author */
    author?: IPerson | undefined;

    /** Excerpt */
    excerpt?: string | undefined;

    /** Featured image */
    featuredImage?: IImageBlock | undefined;

    /** Sections */
    bottomSections?:
        | (
              | IContactSection
              | ICtaSection
              | IFaqSection
              | IFeatureHighlightSection
              | IFeaturedItemsSection
              | IFeaturedPeopleSection
              | IFeaturedPostsSection
              | IHeroSection
              | IJobsSection
              | IMediaGallerySection
              | IQuoteSection
              | IRecentPostsSection
              | ITestimonialsSection
              | ITextSection
          )[]
        | undefined;

    /** Content */
    content?: string | undefined;
}

export interface IPostLayout extends Entry<IPostLayoutFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'PostLayout';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IQuoteSectionFields {
    /** Element ID */
    elementId?: string | undefined;

    /** Colors */
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f' | 'colors-g' | 'colors-h' | undefined;

    /** Quote */
    quote: string;

    /** Author name */
    name?: string | undefined;

    /** Author title */
    title?: string | undefined;

    /** Background image */
    backgroundImage?: IImageBlock | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface IQuoteSection extends Entry<IQuoteSectionFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'QuoteSection';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IRecentPostsSectionFields {
    /** Element ID */
    elementId?: string | undefined;

    /** Show post date */
    showDate?: boolean | undefined;

    /** Show post author */
    showAuthor?: boolean | undefined;

    /** Show post excerpt */
    showExcerpt?: boolean | undefined;

    /** Arrangement */
    variant?: 'variant-a' | 'variant-b' | 'variant-c' | undefined;

    /** Actions */
    actions?: (IButton | ILink)[] | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;

    /** Title */
    title?: string | undefined;

    /** Subtitle */
    subtitle?: string | undefined;

    /** Colors */
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f' | 'colors-g' | 'colors-h' | undefined;

    /** Number of recent posts to show */
    recentCount?: number | undefined;
}

export interface IRecentPostsSection extends Entry<IRecentPostsSectionFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'RecentPostsSection';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface ISelectFormControlFields {
    /** Name */
    name: string;

    /** Label */
    label?: string | undefined;

    /** Hide label */
    hideLabel?: boolean | undefined;

    /** Default value */
    defaultValue?: string | undefined;

    /** Options */
    options?: string[] | undefined;

    /** Is the field required? */
    isRequired?: boolean | undefined;

    /** Width */
    width?: 'full' | '1/2' | undefined;
}

export interface ISelectFormControl extends Entry<ISelectFormControlFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'SelectFormControl';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface ISeoFields {
    /** metaTitle */
    metaTitle?: string | undefined;

    /** metaDescription */
    metaDescription?: string | undefined;

    /** addTitleSuffix */
    addTitleSuffix?: boolean | undefined;

    /** socialImage */
    socialImage?: Asset | undefined;

    /** metaTags */
    metaTags?: IMetaTag[] | undefined;
}

export interface ISeo extends Entry<ISeoFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'Seo';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface ISocialFields {
    /** Label */
    label?: string | undefined;

    /** Alt text */
    altText?: string | undefined;

    /** URL */
    url: string;

    /** Icon */
    icon?: 'facebook' | 'github' | 'instagram' | 'linkedin' | 'reddit' | 'twitter' | 'vimeo' | 'youtube' | undefined;

    /** Style */
    style?: 'link' | 'primary' | 'secondary' | undefined;

    /** Element ID */
    elementId?: string | undefined;
}

export interface ISocial extends Entry<ISocialFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'Social';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface ITestimonialFields {
    /** Quote */
    quote: string;

    /** Author name */
    name?: string | undefined;

    /** Author title */
    title?: string | undefined;

    /** Author image */
    image?: IImageBlock | undefined;

    /** Element ID */
    elementId?: string | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface ITestimonial extends Entry<ITestimonialFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'Testimonial';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface ITestimonialsSectionFields {
    /** Element ID */
    elementId?: string | undefined;

    /** Colors */
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f' | 'colors-g' | 'colors-h' | undefined;

    /** Arrangement */
    variant?: 'variant-a' | 'variant-b' | 'variant-c' | undefined;

    /** Title */
    title?: string | undefined;

    /** Subtitle */
    subtitle?: string | undefined;

    /** Testimonials */
    testimonials?: ITestimonial[] | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface ITestimonialsSection extends Entry<ITestimonialsSectionFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'TestimonialsSection';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface ITextareaFormControlFields {
    /** Name */
    name: string;

    /** Label */
    label?: string | undefined;

    /** Hide label */
    hideLabel?: boolean | undefined;

    /** Placeholder text */
    placeholder?: string | undefined;

    /** Is the field required? */
    isRequired?: boolean | undefined;

    /** Width */
    width?: 'full' | '1/2' | undefined;
}

export interface ITextareaFormControl extends Entry<ITextareaFormControlFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'TextareaFormControl';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface ITextFormControlFields {
    /** Name */
    name: string;

    /** Label */
    label?: string | undefined;

    /** Hide label */
    hideLabel?: boolean | undefined;

    /** Placeholder text */
    placeholder?: string | undefined;

    /** Is the field required? */
    isRequired?: boolean | undefined;

    /** Width */
    width?: 'full' | '1/2' | undefined;
}

export interface ITextFormControl extends Entry<ITextFormControlFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'TextFormControl';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface ITextSectionFields {
    /** Element ID */
    elementId?: string | undefined;

    /** Colors */
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f' | 'colors-g' | 'colors-h' | undefined;

    /** Title */
    title?: string | undefined;

    /** Subtitle */
    subtitle?: string | undefined;

    /** Text */
    text?: string | undefined;

    /** Styles */
    styles?: Record<string, any> | undefined;
}

export interface ITextSection extends Entry<ITextSectionFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'TextSection';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IThemeStyleFields {
    /** Font - headlines & subtitles */
    fontHeadlines?: 'sans' | 'sansAlt' | undefined;

    /** H1 */
    h1?: IThemeStyleHeading | undefined;

    /** H2 */
    h2?: IThemeStyleHeading | undefined;

    /** H3 */
    h3?: IThemeStyleHeading | undefined;

    /** H4 */
    h4?: IThemeStyleHeading | undefined;

    /** H5 */
    h5?: IThemeStyleHeading | undefined;

    /** H6 */
    h6?: IThemeStyleHeading | undefined;

    /** Font - body & captions */
    fontBody?: 'sans' | 'sansAlt' | undefined;

    /** Site background */
    main?: string | undefined;

    /** Light */
    light?: string | undefined;

    /** Foreground over light */
    onLight?: string | undefined;

    /** Dark */
    dark?: string | undefined;

    /** Foreground over dark */
    onDark?: string | undefined;

    /** Primary */
    primary?: string | undefined;

    /** Foreground over primary */
    onPrimary?: string | undefined;

    /** Secondary */
    secondary?: string | undefined;

    /** Foreground over secondary */
    onSecondary?: string | undefined;

    /** Complementary */
    complementary?: string | undefined;

    /** Foreground over complementary */
    onComplementary?: string | undefined;

    /** Primary button */
    buttonPrimary?: IThemeStyleButton | undefined;

    /** Secondary button */
    buttonSecondary?: IThemeStyleButton | undefined;

    /** Link */
    link?: IThemeStyleButton | undefined;
}

export interface IThemeStyle extends Entry<IThemeStyleFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'ThemeStyle';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IThemeStyleButtonFields {
    /** Font weight */
    weight?: 'normal' | 'bold' | undefined;

    /** Case */
    case?: 'none' | 'lowercase' | 'capitalize' | 'uppercase' | undefined;

    /** Letter spacing */
    letterSpacing?: 'tighter' | 'tight' | 'normal' | 'wide' | 'wider' | undefined;

    /** Corner radius */
    borderRadius?: 'none' | 'md' | 'full' | undefined;

    /** Border style */
    borderStyle?: 'none' | 'solid' | 'dashed' | 'dotted' | 'double' | undefined;

    /** Horizontal padding */
    horizontalPadding?: number | undefined;

    /** Vertical padding */
    verticalPadding?: number | undefined;

    /** Shadow */
    shadow?: 'none' | 'md' | 'xl' | undefined;
}

export interface IThemeStyleButton extends Entry<IThemeStyleButtonFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'ThemeStyleButton';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IThemeStyleHeadingFields {
    /** Font size */
    size?: 'xs' | 'sm' | 'base' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl' | '5xl' | '6xl' | '7xl' | '8xl' | '9xl' | undefined;

    /** Font weight */
    weight?: 'normal' | 'bold' | undefined;

    /** Decoration */
    decoration?: 'none' | 'underline' | 'line-through' | undefined;

    /** Case */
    case?: 'none' | 'lowercase' | 'capitalize' | 'uppercase' | undefined;

    /** Letter spacing */
    letterSpacing?: 'tighter' | 'tight' | 'normal' | 'wide' | 'wider' | undefined;
}

export interface IThemeStyleHeading extends Entry<IThemeStyleHeadingFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'ThemeStyleHeading';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export interface IVideoBlockFields {
    /** Title */
    title?: string | undefined;

    /** Video URL (YouTube, Vimeo, .mp4) */
    url?: string | undefined;

    /** Autoplay */
    autoplay?: boolean | undefined;

    /** Loop */
    loop?: boolean | undefined;

    /** Muted */
    muted?: boolean | undefined;

    /** Controls */
    controls?: boolean | undefined;

    /** Aspect ratio */
    aspectRatio?: '4:3' | '16:9' | undefined;

    /** Element ID */
    elementId?: string | undefined;
}

export interface IVideoBlock extends Entry<IVideoBlockFields> {
    sys: {
        id: string;
        type: string;
        createdAt: string;
        updatedAt: string;
        locale: string;
        contentType: {
            sys: {
                id: 'VideoBlock';
                linkType: 'ContentType';
                type: 'Link';
            };
        };
    };
}

export type CONTENT_TYPE =
    | 'Badge'
    | 'Button'
    | 'CheckboxFormControl'
    | 'Config'
    | 'ContactBlock'
    | 'ContactSection'
    | 'CtaSection'
    | 'EmailFormControl'
    | 'FaqItem'
    | 'FaqSection'
    | 'FeaturedItem'
    | 'FeaturedItemsSection'
    | 'FeaturedPeopleSection'
    | 'FeaturedPostsSection'
    | 'FeatureHighlightSection'
    | 'Footer'
    | 'FormBlock'
    | 'Header'
    | 'HeroSection'
    | 'ImageBlock'
    | 'JobList'
    | 'JobListItem'
    | 'JobsSection'
    | 'Link'
    | 'MediaGallerySection'
    | 'MetaTag'
    | 'PagedPostsSection'
    | 'PageLayout'
    | 'Person'
    | 'PostFeedLayout'
    | 'PostFeedSection'
    | 'PostLayout'
    | 'QuoteSection'
    | 'RecentPostsSection'
    | 'SelectFormControl'
    | 'Seo'
    | 'Social'
    | 'Testimonial'
    | 'TestimonialsSection'
    | 'TextareaFormControl'
    | 'TextFormControl'
    | 'TextSection'
    | 'ThemeStyle'
    | 'ThemeStyleButton'
    | 'ThemeStyleHeading'
    | 'VideoBlock';

export type LOCALE_CODE = 'en-US';

export type CONTENTFUL_DEFAULT_LOCALE_CODE = 'en-US';
